import 'dart:convert';
import 'dart:ui';

import 'package:flutter/material.dart';
import 'package:practice1/Screens/EmpModel.dart';

import 'AdditionInfo.dart';
import 'package:http/http.dart' as http;

class dashboard extends StatefulWidget {
   dashboard({super.key});

  @override
  State<dashboard> createState() => _dashboardState();
}

class _dashboardState extends State<dashboard> {
  late Future<dynamic> futureWeather;
   String name="";
   Future<List<Autogenerated>> getCurrentWeather() async{
     try{
       final result=await http.get(Uri.parse("https://10.0.2.2:7122/api/Employee/GetAll"));
       print(result.body);
       final List<dynamic> data=jsonDecode(result.body);
       final List<Autogenerated> emps=data.map((json)=>Autogenerated.fromJson(json)).toList();
       if(data==null){
         throw 'An unexpected Error Occurred';
       }

       setState(() {

       });
       if(emps!=null){
         return emps;
       }
       return emps;
     }
     catch(e){
      throw e.toString();
     }

   }

   @override
  void initState() {
    // TODO: implement initState
    super.initState();
    futureWeather=getCurrentWeather();

  }
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Center(child: Text("Weather app")),
        actions: [
          IconButton(onPressed: (){

          }, icon:Icon(Icons.refresh))
        ],

      ),
      body: FutureBuilder(
        future: futureWeather,
        builder: (context,snapshot){
          if(snapshot.connectionState==ConnectionState.waiting){
            return Center(child:CircularProgressIndicator.adaptive());
          }
          if(snapshot.hasError){
            return Text(snapshot.error.toString());
          }
         String Name='';
          if(snapshot.hasData){
            final data=snapshot.data;
            Name=data?[0].empname??'';
          }
  return

         SingleChildScrollView(
          child: Padding(
            padding: const EdgeInsets.all(16.0),
            child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Container(
                  width:double.infinity,
                  height: 240,
                  child: Card(
                    elevation: 10,
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(20)
                    ),
                    child: ClipRRect(
                      borderRadius: BorderRadius.circular(20),

                      child: BackdropFilter(
                        filter: ImageFilter.blur(sigmaX: 10,sigmaY: 10),
                        child: Column(
                          children: [
                        SizedBox(height:20),
                            Text("200 F",style: TextStyle(
                              fontSize: 32,
                              fontWeight: FontWeight.bold,

                            ),),
                            SizedBox(height: 20,),
                            Icon(Icons.cloud,
                              size:70,

                            ),
                            SizedBox(height: 20,),


                            Text("${Name}",style:TextStyle(fontSize: 32,fontWeight: FontWeight.bold)),

                            Row(
                              children: [
                                Column(
                                  children: [

                                  ],
                                )
                              ],
                            )
                          ],
                        ),
                      ),
                    ),
                  ),
                )


                ,
                const SizedBox(height:20),
                Text("Weather forecast",style: TextStyle(
                  fontSize: 20,
                ),),

                SingleChildScrollView(

                  scrollDirection: Axis.horizontal,
                  child: Row(
                    children: [
                      HourlyForecast(),
                      HourlyForecast(),
                      HourlyForecast(),
                      HourlyForecast(),
                      HourlyForecast(),
                    ],
                  ),
                ),
                Text("Additional Information",style: TextStyle(fontSize: 18),),
                Row(
            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  children: [
                    additionalInfo(
                     icon:Icons.water_drop,
                      label: "humidity",
                        temp:"96",
                    ),
                    additionalInfo(
                      icon:Icons.air,
                      label: "wind speed",
                      temp:"96",
                    ),
                    additionalInfo(
                      icon:Icons.beach_access,
                      label: "Pressure",
                      temp:"96",
                    ),
                  ],
                )

              ],
            ),
          ),
         );
        },
      ),
    );
  }

  Widget AdditionalInfo(){
    return Container(

      child: Column(
        children: [

          Icon(Icons.accessibility,size: 40,),

          Text("Humidity",style: TextStyle(fontSize: 20),),

          Text("94",style:TextStyle(fontWeight: FontWeight.bold,fontSize: 21)),
        ],
      ),
    );
  }
}



class HourlyForecast extends StatelessWidget {
  const HourlyForecast({super.key});

  @override
  Widget build(BuildContext context) {
    return
       Card(
        elevation: 6,

        child: Container(
          width: 100,
          padding: const EdgeInsets.all(8.0),
          decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(20),
          ),
          child: Column(
            children: [
              Text("03.00",style:TextStyle(
                fontSize: 16,
                fontWeight: FontWeight.bold,

              ),),
              SizedBox(height: 8,),
              Icon(Icons.cloud,size: 30,),
              SizedBox(height: 8,),
              Text("320.12",style:TextStyle(
                fontSize: 12,

              ))

            ],
          ),
        ),
      );

  }
}
